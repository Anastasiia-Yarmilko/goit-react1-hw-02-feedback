{"version":3,"sources":["components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","App.jsx","index.js"],"names":["Section","title","children","className","PropsType","string","Statistics","countTotalFeedbacks","props","state","good","neutral","bad","countPositiveFeedbackPercent","Math","round","totalFeedbacks","this","Component","FeedbackOptions","options","onLeaveFeedback","map","key","type","name","onClick","arrayOf","func","App","handleFeedback","event","currentTarget","setState","prevState","Object","keys","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAEO,SAASA,EAAT,GAAkD,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UACvC,OACI,gCACI,6BAAKF,IACL,yBAASE,UAAWA,EAApB,SACKD,OAMjBF,EAAQI,UAAY,CAChBH,MAAOG,IAAUC,OACjBF,UAAWC,IAAUC,Q,ICZnBC,E,4MACFC,oBAAsB,WAElB,OADY,GAEC,EAAKC,MAAMC,MAAMC,KAAO,EAAKF,MAAMC,MAAME,QAAU,EAAKH,MAAMC,MAAMG,M,EAIrFC,6BAA+B,WAC3B,OACIC,KAAKC,MAAM,EAAKP,MAAMC,MAAMC,KAAO,EAAKH,sBAAwB,M,4CAIxE,WACI,IAAMS,EAAiBC,KAAKV,sBAC5B,EAA+BU,KAAKT,MAAMC,MAAlCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACuB,IAAnBI,EAEQ,cAAChB,EAAD,CAASC,MAAM,aAAaE,UAAU,aAAtC,SACI,sDAIR,eAACH,EAAD,CAASC,MAAM,aAAaE,UAAU,aAAtC,UACI,yCAAaO,EAAb,OACA,4CAAgBC,KAChB,wCAAYC,KACZ,0CAAcI,KACd,sDAA0BC,KAAKJ,+BAA/B,e,GA/BKK,aAsCVZ,ICvCTa,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OACI,8BACKD,EAAQE,KAAI,SAAAC,GACT,OACI,wBAAkBC,KAAK,SAASC,KAAMF,EAAKG,QAASL,EAApD,SACKE,GADQA,SASjCJ,EAAgBf,UAAY,CACxBgB,QAAShB,IAAUuB,QAAQvB,IAAUC,QACrCgB,gBAAiBjB,IAAUwB,MAGhBT,QCfMU,E,4MACnBpB,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPkB,eAAiB,SAAAC,GACf,IAAQN,EAASM,EAAMC,cAAfP,KAER,EAAKQ,UAAS,SAAAC,GACZ,OAAO,2BACFA,GADL,kBAEGT,EAAOS,EAAUT,GAAQ,Q,4CAKhC,WACE,OACE,gCACE,cAACzB,EAAD,CACEC,MAAM,yBACNE,UAAU,aACZ,cAAC,EAAD,CACEiB,QAASe,OAAOC,KAAKnB,KAAKR,OAC1BY,gBAAiBJ,KAAKa,iBACxB,cAAC,EAAD,CACErB,MAAOQ,KAAKR,e,GA5BWS,aCDjCmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.201e7f61.chunk.js","sourcesContent":["import PropsType from 'prop-types';\n\nexport function Section({ title, children, className }) {\n    return (\n        <div>\n            <h2>{title}</h2>\n            <section className={className}>\n                {children}\n            </section>\n        </div>\n    );\n}\n\nSection.PropsType = {\n    title: PropsType.string,\n    className: PropsType.string\n}","import { Component } from 'react';\nimport { Section } from 'components/Section/Section';\n\nclass Statistics extends Component {\n    countTotalFeedbacks = () => {\n        let total = 0;\n        return (\n            total += this.props.state.good + this.props.state.neutral + this.props.state.bad\n        )\n    }\n\n    countPositiveFeedbackPercent = () => {\n        return (\n            Math.round(this.props.state.good / this.countTotalFeedbacks() * 100)\n        )\n    }\n\n    render() {\n        const totalFeedbacks = this.countTotalFeedbacks();\n        const { good, neutral, bad } = this.props.state;\n        \n        return (\n            totalFeedbacks === 0\n                ? (\n                    <Section title=\"Statistics\" className=\"statistics\">\n                        <div>No feedback given</div>\n                    </Section>\n                )\n            : (\n                <Section title=\"Statistics\" className=\"statistics\">\n                    <div>Good: { good } </div>\n                    <div>Neutral: { neutral }</div>\n                    <div>Bad: { bad }</div>\n                    <div>Total: { totalFeedbacks }</div>\n                    <div>Positive feedback: { this.countPositiveFeedbackPercent() } %</div>\n                </Section>\n            )\n        )\n    }\n};\n\nexport default Statistics;","import PropsType from 'prop-types';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n    return (\n        <div>\n            {options.map(key => {\n                return (\n                    <button key={key} type=\"button\" name={key} onClick={onLeaveFeedback}>\n                        {key}\n                    </button>\n                )\n            })}\n        </div>\n    )\n};\n\nFeedbackOptions.PropsType = {\n    options: PropsType.arrayOf(PropsType.string),\n    onLeaveFeedback: PropsType.func,\n}\n\nexport default FeedbackOptions;","import './App.css';\nimport { Component } from 'react';\nimport { Section } from 'components/Section/Section';\nimport Statistics from 'components/Statistics/Statistics';\nimport FeedbackOptions from 'components/FeedbackOptions/FeedbackOptions';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n\n  handleFeedback = event => {\n    const { name } = event.currentTarget;\n\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        [name]: prevState[name] + 1,\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Section\n          title=\"Please, leave feedback\"\n          className=\"feedback\" />\n        <FeedbackOptions\n          options={Object.keys(this.state)}\n          onLeaveFeedback={this.handleFeedback} />\n        <Statistics\n          state={this.state} />\n      </div>\n    )\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}